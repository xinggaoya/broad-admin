<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.broad.system.mapper.SysUserLogMapper">

    <resultMap type="com.broad.system.entity.SysUserLog" id="SysUserLogMap">
        <result property="logId" column="log_id" jdbcType="INTEGER"/>
        <result property="logDescription" column="log_description" jdbcType="VARCHAR"/>
        <result property="logMethod" column="log_method" jdbcType="NUMERIC"/>
        <result property="logUrl" column="log_url" jdbcType="VARCHAR"/>
        <result property="logStatus" column="log_status" jdbcType="VARCHAR"/>
        <result property="exceptionInfo" column="exception_info" jdbcType="VARCHAR"/>
        <result property="logHttpMethod" column="log_http_method" jdbcType="VARCHAR"/>
        <result property="logIpAddress" column="log_ip_address" jdbcType="VARCHAR"/>
        <result property="logParams" column="log_params" jdbcType="VARCHAR"/>
        <result property="logResult" column="log_result" jdbcType="VARCHAR"/>
        <result property="logMethodType" column="log_method_type" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="key">
        sul
        .
        log_id
        , sul.log_description, sul.log_method,sul.log_status,sul.exception_info, sul.log_url, sul.log_http_method,sul.log_ip, sul.log_ip_address, sul.log_params, sul.log_result, sul.log_method_type, sul.create_time
    </sql>

    <select id="selectAll" resultType="com.broad.system.entity.SysUserLog">
        SELECT<include refid="key"/>, su.user_name adminName
        FROM sys_user_log sul
        left join sys_user su on su.id = sul.admin_id
        <where>
            <if test="sysAdminLog.logDescription != null and sysAdminLog.logDescription != ''">
                and sul.log_description like concat('%',#{sysAdminLog.logDescription},'%')
            </if>
            <if test="sysAdminLog.logMethod != null and sysAdminLog.logMethod != ''">
                and sul.log_method = #{sysAdminLog.logMethod}
            </if>
            <if test="sysAdminLog.logStatus != null and sysAdminLog.logStatus != ''">
                and sul.log_status = #{sysAdminLog.logStatus}
            </if>
            <if test="sysAdminLog.logHttpMethod != null and sysAdminLog.logHttpMethod != ''">
                and sul.log_http_method = #{sysAdminLog.logHttpMethod}
            </if>
            <if test="sysAdminLog.logIpAddress != null and sysAdminLog.logIpAddress != ''">
                and sul.log_ip_address = #{sysAdminLog.logIpAddress}
            </if>
            <if test="sysAdminLog.logMethodType != null and sysAdminLog.logMethodType != ''">
                and sul.log_method_type = #{sysAdminLog.logMethodType}
            </if>
            <if test="sysAdminLog.createTime != null and sysAdminLog.createTime != ''">
                and sul.create_time = #{sysAdminLog.createTime}
            </if>

            <if test="sysAdminLog.operatingTimeList != null and sysAdminLog.operatingTimeList.size() > 0">
                sul.create_time between #{sysAdminLog.operatingTimeList[0]} and #{sysAdminLog.operatingTimeList[1]}
            </if>
        </where>
        ORDER BY sul.create_time DESC
    </select>
</mapper>

